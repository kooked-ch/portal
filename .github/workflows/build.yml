name: Build Docker image and Create Release

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository }}

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Version from package.json
        id: get_version
        run: |
          version=$(jq -r .version package.json)
          echo "Version from package.json: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

  build:
    needs: get-version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Echo version
        run: echo "Building ${{ env.REGISTRY }}/${{ env.REPOSITORY }}, version ${{ needs.get-version.outputs.version }}"

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}
          tags: |
            latest,
            ${{ needs.get-version.outputs.version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest,${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ needs.get-version.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    needs: [get-version, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up GitHub CLI
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ needs.get-version.outputs.version }}" \
          --repo="${{ github.repository }}" \
          --title="${{ needs.get-version.outputs.version }}" \
          --generate-notes
